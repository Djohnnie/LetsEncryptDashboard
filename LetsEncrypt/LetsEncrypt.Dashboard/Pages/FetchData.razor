@page "/fetchdata"

<MudCard>
    <MudCardContent>
        <PageTitle>Let's Encrypt Dashboard</PageTitle>

        <MudText Typo="Typo.h3" GutterBottom="true">Let's Encrypt Dashboard</MudText>
        <MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>

        @*@if (forecasts == null)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        }
        else
        {
            <MudTable Items="forecasts" Hover="true" SortLabel="Sort By" Elevation="0">
                <HeaderContent>
                    <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x=>x.Date)">Domain</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureC)">Email address</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureF)">Renewed on</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.Summary!)">Expires on</MudTableSortLabel></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Domain">@context.Date</MudTd>
                    <MudTd DataLabel="Email address">@context.TemperatureC</MudTd>
                    <MudTd DataLabel="Renewed on">@context.TemperatureF</MudTd>
                    <MudTd DataLabel="Expires on">@context.Summary</MudTd>
                </RowTemplate>
            </MudTable>
        }*@

    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
    </MudCardActions>
</MudCard>




@code
{
    protected override Task OnInitializedAsync()
    {
        return Task.CompletedTask;
    }
}