@using LetsEncrypt.Managers.Interfaces;
@using LetsEncrypt.Model;

@inject ICertificateEntryManager _certificateEntryManager;

<MudDialog>
    <DialogContent>
        <MudForm>
            <MudTextField T="string" @bind-value="@_certificateEntry.Email" Label="Email address" Required="true" RequiredError="Email address is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.DomainName" Label="Domain name" Required="true" RequiredError="Domain name is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.Organization" Label="Organization" Required="true" RequiredError="Organization is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.OrganizationUnit" Label="Organization unit" Required="true" RequiredError="Organization unit is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.Locality" Label="Locality" Required="true" RequiredError="Locality is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.State" Label="State" Required="true" RequiredError="State is required!" />
            <MudTextField T="string" @bind-value="@_certificateEntry.CountryName" Label="Country" Required="true" RequiredError="Country is required!" />
            <MudCheckBox T="bool" @bind-value="@_certificateEntry.IsStaging" Required="true" Label="Use this certificate entry on a staging environment?" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    CertificateEntry _certificateEntry = new CertificateEntry();

    private async void Submit()
    {
        await _certificateEntryManager.AddCertificateEntry(_certificateEntry);

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}